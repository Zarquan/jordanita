#
# <meta:header>
#   <meta:licence>
#     Copyright (C) 2025 by Wizzard Solutions Ltd, wizzard@metagrid.co.uk
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#
# AIMetrics: []
#

    Target:

        Success

    Result:

        Work in progress ...

# -----------------------------------------------------

    POST to /api/aggregate

        returns location with UUID for the response
        /api/offers/{job_id}

    GET /api/offers/{job_id}

        Polls for job status and results
        Asynchronously increase the contents of the result set.
        ... because we are aggregating several services.
        so we want to build the offerset gradually
        we get an instant initial response and poll to get more

    Downstream broker API isn't a poll interface.

        .. because we want to wait for a completed set ?

    If we combine them into the same API.

    POST to /api/aggregate

        waits for at least <n> positive responses
        ... or a timelimit

        returns location with UUID for the response
        /api/offers/{job_id}





