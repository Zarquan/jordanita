#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#


# -----------------------------------------------------
# Update our source code.
#[user@virtual]

    source "${HOME}/enteucha.settings"

    echo "Checking [${ENTEUCHA_CODE}]"
    if [ ! -e "${ENTEUCHA_CODE:?}" ]
    then
        echo "Creating [${ENTEUCHA_CODE}]"
        mkdir "$(dirname ${ENTEUCHA_CODE:?})"
        pushd "$(dirname ${ENTEUCHA_CODE:?})"
            git clone "${ENTEUCHA_REPO:?}" "$(basename ${ENTEUCHA_CODE:?})"
        popd
    else
        echo "Updating [${ENTEUCHA_CODE}]"
        pushd "${ENTEUCHA_CODE:?}"
            git pull
        popd
    fi


# -----------------------------------------------------
# Update the memory limits for our build.
#[user@virtual]

    source "${HOME:?}/enteucha.settings"
    pushd "${ENTEUCHA_CODE:?}"

        xmlstarlet \
            edit \
            --pf \
            --update \
                "//_:plugin[_:artifactId='maven-surefire-plugin']/_:configuration/_:argLine" \
            --value \
                "-Xmx100g -Xms100g" \
            pom.xml \
        > pom.new


        diff pom.xml pom.new
        
    >   378c374
    >   <                     <argLine>-Xmx10g -Xms10g</argLine>
    >   ---
    >   >                     <argLine>-Xmx100g -Xms100g</argLine>

        
        rm pom.xml
        mv pom.new pom.xml
    
    popd

# -----------------------------------------------------
# Run an instance of firethorn builder container.
#[user@virtual]

    docker run \
        --rm \
        --tty \
        --interactive \
        --user "$(id -u)" \
        --volume "/var/local/cache:/var/local/cache" \
        --volume "/var/local/build:/var/local/build" \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock" \
        --volume "/var/run/docker.sock:/var/run/docker.sock" \
        --volume "${secretsh}:/bin/secret" \
        "firethorn/builder:latest" \
        'bash'


# -----------------------------------------------------
# Run our tests.
#[user@builder]

    ENTEUCHA_CODE=/var/local/build/enteucha
    pushd "${ENTEUCHA_CODE:?}"

        mvn clean compile
        datetime=$(date +%Y%m%dT%H%M%S)

        mvn test -D 'test=HsqlHtmidMatcherTestCase'
            cp target/enteucha-trace.log /var/local/cache/logs/latest-sqlhtm.log
            cp target/enteucha-trace.log /var/local/cache/logs/${datetime:?}-sqlhtm.log

        mvn test -D 'test=HsqlZoneMatcherTestCase'
            cp target/enteucha-trace.log /var/local/cache/logs/latest-sqlzone.log
            cp target/enteucha-trace.log /var/local/cache/logs/${datetime:?}-sqlzone.log

        mvn test -D 'test=CQZoneMatcherTestCase'
            cp target/enteucha-trace.log /var/local/cache/logs/latest-cqzone.log
            cp target/enteucha-trace.log /var/local/cache/logs/${datetime:?}-cqzone.log

    popd


# -----------------------------------------------------
# Check our results.
#[user@builder]

