#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2017, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#

1 --------

Timeline :

    2014-2015 Initial experiments with Docker
    2015-2016 Shell scripts for building and running the services.
    2017-2018 Compose for building and running the services.

Custom virtual machine image to host docker services.
Automated build using RedHat kickstarter.
Minimal Fedora install, specific version of docker and docker-compose and admin tools.
Compatible with our own launch scripts and the university OpenStack system.

    ~30sec to create and launch a new VM

2 --------

BTRFS file system ..

3 --------

Secrets and passwords configured using a custom secret service.

Shell script function that looks up a secret :

    secret <key>

Implemented using a combination of ssh and sed :

secret()
    {
    local key=${1:?}
    ssh -o 'VisualHostKey=no' "${secrethost:?}" "
        sed -n '
            s/^[[:space:]]*${key}=\\(.*\\)/\\1/p
            ' \"${secretfile:?}\"
        " 
    }

Remote account contains key value pairs :

    cat ~/secretfile

toad=Brown Toad
frog=Green Frog
fish=Blue Sea

        ssh.tunnel.user=########
        ssh.tunnel.host=########

        docker.io.user=########
        docker.io.pass=########

        openstack.user=########
        openstack.pass=########

4 --------

Basic Firethorn services

    Firethorn  (tomcat)   gillian
    Ogsadai    (tomcat)   jarmila
    Postgresql (postgres) bethany
    
Remote deploy adds two extra ssh tunnel services

    sql-tunnel  elayne
    sql-tunnel  patricia

Using human names for the services avoids duplication and hard coded values.
Worst case hostname postgres, database name postgres, user name postgres password ...

5 --------

Write configuration and passwords to a local file on the virtual machine.

    cat > "${HOME:?}/chain.properties" << EOF

    metaname=bethany
    username=patricia
    dataname=elayne
    ogsaname=jarmila
    firename=gillian

    metatype=pgsql
    metadata=postgres
    metauser=$(pwgen 20 1)
    metapass=$(pwgen 20 1)
    metadriver=org.postgresql.Driver

6 --------

2015-2016 Shell scripts for building and running the services :

# Start our PostgreSQL database container.
docker run \
    --detach \
    --name "${metaname}" \
    --env "POSTGRES_USER=${metauser}" \
    --env "POSTGRES_PASSWORD=${metapass}" \
    postgres

# Start our Firethorn container.
docker run \
    --detach \
    --publish 8080:8080 \
    --name "${firename}" \
    --link "${ogsaname}" \
    --link "${metaname}" \
    --link "${dataname}" \
    --link "${username}" \
    --volume "${properties}:/etc/firethorn.properties" \
    --volume /etc/localtime:/etc/localtime:ro \
    "firethorn/firethorn:${version}"

7 --------

2017-2018 Compose for building and running the services :

Single compose.yml configuration file for a set of services :

docker-compose.yml

bethany:
    image:
       "firethorn/postgres:${buildtag}"
    ....

jarmila:
    image:
       "firethorn/ogsadai:${buildtag}"
    ....
    
gillian:
    image:
       "firethorn/firethorn:${buildtag}"
    ....
    depends_on:
        bethany:
            condition: service_started            
        jarmila:
            condition: service_healthy            

7 --------

Single command to launch the set of services :

    docker-compose \
        up
    
Because gillian depends on both bethany and jarmila, compose
will make sure they are running before it starts gillian.

Single command to take down a set of services :

    docker-compose \
        down

8 --------

    Example - deploy a set of services to test the Python client.

    mkdir firethorn
    pushd firethorn
    
    


9 --------

    Example - Maria's code to deploy Kafka and Zookeeper.

    mkdir mtpatter
    pushd mtpatter

        git clone git@github.com:mtpatter/alert_stream.git
            
        docker-compose \
            --file "alert_stream/docker-compose.yml" \
            up


    



